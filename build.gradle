plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.5'
	id 'io.spring.dependency-management' version '1.1.7'
//	id 'maven-publish'
}

group = 'com.broadcom.springconsulting'
version = '0.1.0-SNAPSHOT'
description = 'A Spring Batch Job to run on Kubernetes'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2025.0.0")
	set('springFunctionsCatalogVersion', "5.1.0")
}

dependencies {

	// Spring Boot dependencies
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-batch'

	// Spring Integration dependencies
	implementation 'org.springframework.batch:spring-batch-integration'
	implementation 'org.springframework.cloud:spring-cloud-function-context'
	implementation 'org.springframework.cloud:spring-cloud-function-integration'
	implementation 'org.springframework.cloud.fn:spring-file-supplier'
	implementation 'org.springframework.cloud.fn:spring-log-consumer'
	implementation 'org.springframework.cloud.fn:spring-spel-function'
	implementation 'org.springframework.cloud.fn:spring-splitter-function'
//	implementation 'org.springframework.cloud.fn:spring-sftp-consumer'
//	implementation 'org.springframework.cloud.fn:spring-sftp-supplier'

	// Observability dependencies
	implementation 'io.micrometer:micrometer-registry-prometheus'
	implementation 'io.prometheus:prometheus-metrics-exporter-pushgateway'
	implementation 'io.micrometer:micrometer-tracing-bridge-brave'

	// Database dependencies
	implementation 'org.liquibase:liquibase-core'
	runtimeOnly 'org.postgresql:postgresql'

	// Developer Tools
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

	// Test dependencies
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.springframework.batch:spring-batch-test'

	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:postgresql'

	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		mavenBom "org.springframework.cloud.fn:spring-functions-catalog-bom:${springFunctionsCatalogVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.named('bootBuildImage') {
	publish = true
}

//publishing {
//	publications {
//		mavenJava(MavenPublication) {
//			from components.java
//
//			artifact bootJar
//
//		}
//	}
//
//	repositories {
//		maven {
//			name = "ghcr.io"
//			url = "https://maven.pkg.github.com/dmfrey/${project.name}"
//			credentials {
//				username = System.getenv("GITHUB_ACTOR")
//				password = System.getenv("GRADLE_TOKEN")
//			}
//		}
//	}
//}